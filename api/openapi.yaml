openapi: 3.0.3
info:
  title: Task Tracking Service API
  description: A RESTful API for managing tasks with CRUD operations
  version: 1.0.0
  contact:
    name: Development Team
servers:
  - url: http://localhost:8080/api/v1
    description: Local development server
tags:
  - name: Tasks
    description: Task management operations

paths:
  /task:
    post:
      tags:
        - Tasks
      summary: Create a new task
      description: Creates a new task with the provided details
      operationId: createTask
      requestBody:
        description: Task information
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTaskRequest"
      responses:
        "201":
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      tags:
        - Tasks
      summary: List all tasks
      description: Retrieves a list of tasks, with optional filtering
      operationId: listTasks
      parameters:
        - name: completed
          in: query
          description: Filter by completion status
          schema:
            type: boolean
        - name: due_before
          in: query
          description: Filter by due date before this date (ISO8601 format)
          schema:
            type: string
            format: date-time
        - name: due_after
          in: query
          description: Filter by due date after this date (ISO8601 format)
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /task/{id}:
    parameters:
      - name: id
        in: path
        description: Task ID
        required: true
        schema:
          type: string
          format: uuid

    get:
      tags:
        - Tasks
      summary: Get task by ID
      description: Retrieves a specific task by its unique identifier
      operationId: getTask
      responses:
        "200":
          description: Task details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      tags:
        - Tasks
      summary: Update a task
      description: Updates an existing task with new details
      operationId: updateTask
      requestBody:
        description: Updated task information
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskRequest"
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Tasks
      summary: Delete a task
      description: Removes a task from the system
      operationId: deleteTask
      responses:
        "204":
          description: Task deleted successfully
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the task
          example: "550e8400-e29b-41d4-a716-446655440000"
        title:
          type: string
          description: Title of the task
          example: "Complete project documentation"
        description:
          type: string
          description: Detailed description of the task
          example: "Write comprehensive documentation for the API endpoints"
        status:
          type: string
          description: Current status of the task
          enum:
            - pending
            - in_progress
            - completed
          example: "pending"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the task was created
          example: "2023-06-15T14:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the task was last updated
          example: "2023-06-15T14:30:00Z"
        due_date:
          type: string
          format: date-time
          description: Date when the task is due to be completed
          example: "2023-06-30T23:59:59Z"
      required:
        - id
        - title
        - description
        - status
        - created_at
        - updated_at

    CreateTaskRequest:
      type: object
      properties:
        title:
          type: string
          description: Title of the task
          example: "Complete project documentation"
        description:
          type: string
          description: Detailed description of the task
          example: "Write comprehensive documentation for the API endpoints"
        status:
          type: string
          description: Initial status of the task (defaults to 'pending' if not provided)
          enum:
            - pending
            - in_progress
            - completed
          default: "pending"
          example: "pending"
        due_date:
          type: string
          format: date-time
          description: Optional date when the task is due to be completed
          example: "2023-06-30T23:59:59Z"
      required:
        - title
        - description

    UpdateTaskRequest:
      type: object
      properties:
        title:
          type: string
          description: New title of the task
          example: "Update project documentation"
        description:
          type: string
          description: New description of the task
          example: "Update documentation with new API endpoints"
        status:
          type: string
          description: New status of the task
          enum:
            - pending
            - in_progress
            - completed
          example: "in_progress"
        due_date:
          type: string
          format: date-time
          description: New due date for the task
          example: "2023-07-15T23:59:59Z"

    Error:
      type: object
      properties:
        code:
          type: integer
          description: HTTP status code
          example: 400
        message:
          type: string
          description: Error message
          example: "Invalid request parameters"
      required:
        - code
        - message
